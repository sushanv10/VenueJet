// login
import 'package:flutter/material.dart';
import 'onboardingscreen.dart';
import 'sign_up.dart';

class LoginPage extends StatelessWidget {
  const LoginPage({Key? key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: Container(
          height: MediaQuery.of(context).size.height,
          decoration: BoxDecoration(
            image: DecorationImage(
              image: AssetImage('assets/images/Login-Screen-Design.jpg'),
              fit: BoxFit.cover,
            ),
          ),
          padding: EdgeInsets.only(left: 120.0, right: 40.0, top: 100.0, bottom: 50.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              Text(
                'Login Here!',
                style: TextStyle(
                  fontSize: 24.0,
                  fontWeight: FontWeight.bold,
                  color: Colors.indigo,
                ),
              ),
              SizedBox(height: 20.0),
              TextField(
                decoration: InputDecoration(
                  labelText: 'Email',
                  prefixIcon: Icon(Icons.email),
                ),
              ),
              SizedBox(height: 10.0),
              TextField(
                obscureText: true,
                decoration: InputDecoration(
                  labelText: 'Password',
                  prefixIcon: Icon(Icons.lock),
                ),
              ),
              SizedBox(height: 0.0),
              Align(
                alignment: Alignment.bottomRight,
                child: TextButton(
                  onPressed: () {
                    // Implement forgot password functionality here
                  },
                  style: TextButton.styleFrom(
                    primary: Colors.indigo,
                  ),
                  child: Text('Forgot Password?'),
                ),
              ),
              SizedBox(height: 0.0),
              ElevatedButton(
                onPressed: () {
                  // Implement login functionality here
                  // For demonstration purposes, let's assume the login is successful
                  bool loginSuccessful = true;

                  if (loginSuccessful) {
                    // Navigate to the onboarding screen
                    Navigator.pushReplacement(
                      context,
                      MaterialPageRoute(builder: (context) => OnboardingScreen()),
                    );
                  }
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.blueAccent,
                ),
                child: Text('Login'),
              ),
              SizedBox(height: 10.0),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Expanded(
                    child: Container(
                      margin: EdgeInsets.symmetric(horizontal: 10.0),
                      child: Divider(
                        color: Colors.black,
                        thickness: 1.0,
                      ),
                    ),
                  ),
                  Text('Or'),
                  Expanded(
                    child: Container(
                      margin: EdgeInsets.symmetric(horizontal: 10.0),
                      child: Divider(
                        color: Colors.black,
                        thickness: 1.0,
                      ),
                    ),
                  ),
                ],
              ),
              SizedBox(height: 20.0),
              GestureDetector(
                onTap: () {
                  // Implement sign-in with Google functionality here
                },
                child: Image.asset(
                  'assets/images/google.png',
                  height: 50.0,
                  width: 200,
                ),
              ),
              SizedBox(height: 15.0),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Text(
                    "Don't have an account?",
                    style: TextStyle(color: Colors.black),
                  ),
                  TextButton(
                    onPressed: () {
                      // Navigate to the registration page
                      Navigator.push(
                        context,
                        MaterialPageRoute(builder: (context) => SignUpPage()),
                      );
                    },
                    style: TextButton.styleFrom(
                      primary: Colors.indigo,
                    ),
                    child: Text('Sign Up.'),
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// signup
import 'package:flutter/material.dart';
import 'login_page.dart'; // Import the login page

class SignUpPage extends StatelessWidget {
  const SignUpPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: Container(
          height: MediaQuery.of(context).size.height,
          decoration: BoxDecoration(
            image: DecorationImage(
              image: AssetImage('assets/images/Login-Screen-Design.jpg'), // Replace with your image path
              fit: BoxFit.cover,
            ),
          ),
          padding: EdgeInsets.only(left: 120.0, right: 40.0, top: 40.0, bottom: 20.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              Text(
                'Create an Account',
                style: TextStyle(
                  fontSize: 24.0,
                  fontWeight: FontWeight.bold,
                  color: Colors.indigo,
                ),
              ),
              SizedBox(height: 20.0),
              TextField(
                decoration: InputDecoration(
                  labelText: 'User Name',
                  prefixIcon: Icon(Icons.person),
                ),
              ),
              SizedBox(height: 10.0),
              TextField(
                decoration: InputDecoration(
                  labelText: 'Email',
                  prefixIcon: Icon(Icons.email),
                ),
              ),
              SizedBox(height: 10.0),
              TextField(
                obscureText: true,
                decoration: InputDecoration(
                  labelText: 'Password',
                  prefixIcon: Icon(Icons.lock),
                ),
              ),
              SizedBox(height: 20.0),
              ElevatedButton(
                onPressed: () {
                  // Implement signup functionality here

                  // For demonstration purposes, navigate to the login page
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => LoginPage()),
                  );
                },
                style: ElevatedButton.styleFrom(
                  primary: Colors.blue, // Set the background color to blue
                ),
                child: Text('Sign Up'),
              ),
              SizedBox(height: 10.0),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Text('Already have an account?'),
                  TextButton(
                    onPressed: () {
                      // Navigate to the login page
                      Navigator.push(
                        context,
                        MaterialPageRoute(builder: (context) => LoginPage()),
                      );
                    },
                    style: TextButton.styleFrom(
                      primary: Colors.indigo, // Set the text color to blue
                    ),
                    child: Text('Login.'),
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}

//featured venue
import 'package:flutter/material.dart';
import 'package:carousel_slider/carousel_slider.dart';
import 'booking_page.dart';


class FeaturedVenuePage extends StatelessWidget {
  final Map<String, String> selectedVenue;

  FeaturedVenuePage.FeaturedVenues({required this.selectedVenue});

  // Glimpses of the Venue images
  List<String> venue1 = [
    'assets/images/Heritage1.jpeg',
    'assets/images/Heritage2.jpeg',
    'assets/images/Heritage3.jpeg',
  ];
  List<String> venue2 = [
    'assets/images/teh1.jpeg',
    'assets/images/teh2.jpg',
    'assets/images/teh3.jpg',
    'assets/images/teh4.jpg',
  ];

  List<String> venue3 = [
    'assets/images/ha5.jpg',
    'assets/images/ha1.jpg',
    'assets/images/ha2.jpg',
    'assets/images/ha3.jpg',
    'assets/images/ha4.jpg',
  ];

  // Contact information for each venue
  Map<String, Map<String, String>> contactInfo = {
    'Heritage Garden': {
      'location': 'Sanepa, LALITPUR, NEPAL',
      'phone': '9849398917',
      'email': 'heritagegarden2016@gmail.com',
    },
    'The Everest Hotel': {
      'location': 'NEW BANESHWOR, KATHMANDU, NEPAL',
      'phone': '977-1-4780100',
      'email': 'sales@theeveresthotel.com',
    },
    'The Annapurna Hotel': {
      'location': 'Durbar Marg, Kathmandu 14229 Nepal',
      'phone': '+977-1- 4221711',
      'email': 'info@annapurna.com.np',
    },
  };

  @override
  Widget build(BuildContext context) {

    String venueDescription = '';

    // Check the selected venue and set the description accordingly
    if (selectedVenue['name'] == 'Heritage Garden') {
      venueDescription =
      'Heritage Garden is a conventional lobby with various administrations adaptable for any sort of occasion.Heritage Garden is situated at Sanepa, Lalitpur-2 (Old Gyanodaya School Premises). It has turned into an excellent choice to lead any of the private and social functions in Heritage Garden due to its nice rich imaginative anteroom lobby, convenient dining space, open bar, and adequate parking spot for 100 or more vehicles. Next to this, the intriguing food and mixed drink menu that HERITAGE GARDEN is offering are astounding what is enough of demonstrating us totally not the same as other existing event organizations and catering services in the country.';
    } else if (selectedVenue['name'] == 'The Everest Hotel') {
      venueDescription =
      'Regardless of whether you are searching for a relaxation lodging in Kathmandu, booking an occasion with your family, companions, and journey to Pashupatinath Temple, or even business inn, The Everest Hotel Kathmandu, hotel deals, offer and stay packages are organized to give you the best worth, address you every need and make recollections that will keep going for a lifetime.The Everest Hotel Kathmandu, hotel deals, offer and stay packages are curated to give you the best value, meet your every need and create memories that will last for a lifetime.';
    } else if (selectedVenue['name'] == 'The Annapurna Hotel') {
      venueDescription =
      'Located in Durbar Marg, Kathmandu premier street, 5-star Hotel Annapurna has a long history of excellence in the hospitality industry. Established in 1965 and named after Annapurna, the Goddess of Abundance, the Hotel provides the finest personal service and facilities in Nepal\'s fabled emerald valley, and its cultural, political and commercial capital. The Hotel has a total of 151 recently renovated Deluxe and Heritage guestrooms, including 5 suites, equipped with modern amenities such as the latest flat screen TV. The Hotel is also famous for its popular eating outlets. The Coffee Shop, Chinese restaurant, the Arniko Room, Ghar-e-Kabab - the Juneli Bar, the Hotel is entirely Wi-Fi enabled. With extensive banquet and conferencing'
          ' facilities, one of the largest hotel swimming pools, well-equipped gym, business center and the most prestigious shopping arcade.';
    }

    // Glimpse images based on the selected venue
    List<String> glimpseImages = [];
    if (selectedVenue['name'] == 'Heritage Garden') {
      glimpseImages = venue1;
    } else if (selectedVenue['name'] == 'The Everest Hotel') {
      glimpseImages = venue2;
    } else if (selectedVenue['name'] == 'The Annapurna Hotel') {
      glimpseImages = venue3;
    }

    return Scaffold(
      appBar: AppBar(
        title: Text('Featured Venue'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Card(
          elevation: 8.0,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(15.0),
          ),
          child: SingleChildScrollView(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                // Image for the selected venue
                Container(
                  height: 200,
                  width: double.infinity,
                  child: ClipRRect(
                    borderRadius: BorderRadius.vertical(top: Radius.circular(15.0)),
                    child: Image.asset(
                      selectedVenue['imagePath'] ?? 'assets/images/default.jpg',
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                SizedBox(height: 16),
                Padding(
                  padding: const EdgeInsets.all(16.0),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        selectedVenue['name'] ?? '',
                        style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
                      ),
                      SizedBox(height: 8),
                      Text(
                        'Description: $venueDescription',
                        style: TextStyle(fontSize: 18),
                      ),
                      SizedBox(height: 16),

                      // Glimpse of the Venue
                      Text(
                        'Glimpse of the Venue',
                        style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
                      ),
                      // Carousel Slider for Glimpses
                      CarouselSlider(
                        options: CarouselOptions(
                          height: 200.0,
                          viewportFraction: 1.0,
                          enlargeCenterPage: false,
                          autoPlay: true,
                        ),
                        items: glimpseImages.map((imagePath) {
                          return Builder(
                            builder: (BuildContext context) {
                              return Container(
                                width: MediaQuery.of(context).size.width,
                                margin: EdgeInsets.symmetric(horizontal: 5.0),
                                child: ClipRRect(
                                  borderRadius: BorderRadius.circular(15.0),
                                  child: Image.asset(
                                    imagePath,
                                    fit: BoxFit.cover,
                                  ),
                                ),
                              );
                            },
                          );
                        }).toList(),
                      ),
                      SizedBox(height: 20),

                      // Contact Information
                      Text(
                        'Contact Information',
                        style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
                      ),
                      Row(
                        children: [
                          Icon(Icons.location_on, color: Colors.blueAccent,size: 30),
                          SizedBox(height:50,width: 10),
                          Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text('Location:', style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
                              Text(contactInfo[selectedVenue['name']]!['location'] ?? '', style: TextStyle(fontSize: 12)),
                            ],
                          ),
                        ],
                      ),
                      SizedBox(height: 8),
                      Row(
                        children: [
                          Icon(Icons.phone, color: Colors.blueAccent,size: 30),
                          SizedBox(width: 8),
                          Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text('Phone:', style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
                              Text(contactInfo[selectedVenue['name']]!['phone'] ?? '', style: TextStyle(fontSize: 12)),
                            ],
                          ),
                        ],
                      ),
                      SizedBox(height: 8),
                      Row(
                        children: [
                          Icon(Icons.email, color: Colors.blueAccent,size: 30),
                          SizedBox(width: 8),
                          Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text('Email:', style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
                              Text(contactInfo[selectedVenue['name']]!['email'] ?? '', style: TextStyle(fontSize: 12)),
                            ],
                          ),
                        ],
                      ),
                      SizedBox(height: 20),

                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(builder: (context) => BookingPage()),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.indigo,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(10.0),
                          ),
                        ),
                        child: Padding(
                          padding: const EdgeInsets.all(12.0),
                          child: Text(
                            'Book Now',
                            style: TextStyle(fontSize: 18),
                          ),
                        ),
                      ),

                    ],
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}

//categories page
import 'package:flutter/material.dart';
import 'venue_detail.dart';

class CategoriesPage extends StatelessWidget {
  final String category;
  final List<Map<String, String>> venues;

  CategoriesPage({required this.category, required this.venues});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(category),
      ),
      body: ListView.builder(
        itemCount: venues.length,
        itemBuilder: (context, index) {
          return _buildCategoryCard(context, venues[index]);
        },
      ),
    );
  }

  Widget _buildCategoryCard(BuildContext context, Map<String, String> venue) {
    return GestureDetector(
      onTap: () {
        _navigateToVenueDetailPage(context, venue);
      },
      child: Card(
        elevation: 5.0,
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(16.0),
        ),
        child: Container(
          height: 250.0, // Set the height as needed
          width: 250.0,  // Set the width as needed
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              ClipRRect(
                borderRadius: BorderRadius.only(
                  topLeft: Radius.circular(16.0),
                  topRight: Radius.circular(16.0),
                ),
                child: Image.asset(
                  venue['imagePath'] ?? 'assets/images/default.jpg',
                  height: 150.0, // Adjust the height of the image as needed
                  width: double.infinity,
                  fit: BoxFit.cover,
                ),
              ),
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      venue['name'] ?? '',
                      style: TextStyle(
                        fontSize: 18.0, // Increase the font size as needed
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    SizedBox(height: 8.0), // Adjust the space between text and description
                    Text(
                      venue['description'] ?? '',
                      style: TextStyle(fontSize: 16.0), // Increase the font size as needed
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  void _navigateToVenueDetailPage(BuildContext context, Map<String, String> venue) {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => VenueDetailPage(selectedVenue: venue),
        ),
      );
    }

  }

// main dart
// main.dart
import 'package:flutter/material.dart';
import 'package:venuejet/login_page.dart';



void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Venue Jet',

      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        primarySwatch: Colors.deepPurple,
      ),
      home: LoginPage(),
    );
  }
}

// venue details
// VenueDetailPage.dart
import 'package:flutter/material.dart';
import 'package:carousel_slider/carousel_slider.dart';
import 'booking_page.dart';

class VenueDetailPage extends StatefulWidget {
  final Map<String, String> selectedVenue;

  VenueDetailPage({required this.selectedVenue});

  @override
  State<VenueDetailPage> createState() => _VenueDetailPageState();
}

class _VenueDetailPageState extends State<VenueDetailPage> {
  // Glimpses of the Venue images
  List<String> venue1 = [
    'assets/images/Heritage1.jpeg',
    'assets/images/Heritage2.jpeg',
    'assets/images/Heritage3.jpeg',
  ];

  List<String> venue2 = [
    'assets/images/teh1.jpeg',
    'assets/images/teh2.jpg',
    'assets/images/teh3.jpg',
    'assets/images/teh4.jpg',
  ];

  List<String> venue3 = [
    'assets/images/ha5.jpg',
    'assets/images/ha1.jpg',
    'assets/images/ha2.jpg',
    'assets/images/ha3.jpg',
    'assets/images/ha4.jpg',
  ];
  List<String> venue4 = [
    'assets/images/gh1.jpeg',
    'assets/images/gh2.jpeg',
    'assets/images/gh3.jpeg',
    'assets/images/gh4.jpeg',
    'assets/images/gh5.jpeg',
  ];

  // Contact information for each venue
  Map<String, Map<String, String>> contactInfo = {
    'Heritage Garden': {
      'location': 'Sanepa, LALITPUR, NEPAL',
      'phone': '9849398917',
      'email': 'heritagegarden2016@gmail.com',
    },
    'The Everest Hotel': {
      'location': 'NEW BANESHWOR, KATHMANDU, NEPAL',
      'phone': '977-1-4780100',
      'email': 'sales@theeveresthotel.com',
    },
    'The Annapurna Hotel': {
      'location': 'Durbar Marg, Kathmandu 14229 Nepal',
      'phone': '+977-1- 4221711',
      'email': 'info@annapurna.com.np',
    },
    'Grand Hotel':{
      'location': 'Tahachal, 12872 Kathmandu, Nepal',
      'phone': '977-01-4700694/ 4701483',
      'email': 'kathmandugrandhotel@gmail.com'
    }
  };

  @override
  Widget build(BuildContext context) {
    String venueDescription = '';

    // Check the selected venue and set the description accordingly
    if (widget.selectedVenue['name'] == 'Heritage Garden') {
      venueDescription =
      'Heritage Garden is a conventional lobby with various administrations adaptable for any sort of occasion.Heritage Garden is situated at Sanepa, Lalitpur-2 (Old Gyanodaya School Premises). It has turned into an excellent choice to lead any of the private and social functions in Heritage Garden due to its nice rich imaginative anteroom lobby, convenient dining space, open bar, and adequate parking spot for 100 or more vehicles. Next to this, the intriguing food and mixed drink menu that HERITAGE GARDEN is offering are astounding what is enough of demonstrating us totally not the same as other existing event organizations and catering services in the country.';
    } else if (widget.selectedVenue['name'] == 'The Everest Hotel') {
      venueDescription =
      'Regardless of whether you are searching for a relaxation lodging in Kathmandu, booking an occasion with your family, companions, and journey to Pashupatinath Temple, or even business inn, The Everest Hotel Kathmandu, hotel deals, offer and stay packages are organized to give you the best worth, address you every need and make recollections that will keep going for a lifetime.The Everest Hotel Kathmandu, hotel deals, offer and stay packages are curated to give you the best value, meet your every need and create memories that will last for a lifetime.';
    } else if (widget.selectedVenue['name'] == 'The Annapurna Hotel') {
      venueDescription =
      'Located in Durbar Marg, Kathmandu premier street, 5-star Hotel Annapurna has a long history of excellence in the hospitality industry. Established in 1965 and named after Annapurna, the Goddess of Abundance, the Hotel provides the finest personal service and facilities in Nepal\'s fabled emerald valley, and its cultural, political and commercial capital. The Hotel has a total of 151 recently renovated Deluxe and Heritage guestrooms, including 5 suites, equipped with modern amenities such as the latest flat screen TV. The Hotel is also famous for its popular eating outlets. The Coffee Shop, Chinese restaurant, the Arniko Room, Ghar-e-Kabab - the Juneli Bar, the Hotel is entirely Wi-Fi enabled. With extensive banquet and conferencing'
          ' facilities, one of the largest hotel swimming pools, '
          'well-equipped gym, business center and the most prestigious shopping arcade.';
    }
    else if (widget.selectedVenue['name'] == 'Grand Hotel') {
      venueDescription =
      'Situated in Kathmandu Valley, this hotel is 2 km from Civil Mall, '
          'QFX Cinema and Bhimsen Tower. It houses 4 dining options, an outdoor pool and a spa.'
          ' Wi-Fi is accessible for free in its public areas. At Aromates Bar, guests can relax with a drink, while admiring views of the Himalayan range and the Kathmandu Valley. Alternatively, Jharna Tea Lounge provides an assortment of tea time pastries, coffee and tea, and other refreshments.Grand Hotel provides meeting/banqueting amenities, a business centre and a tour desk. Laundry, currency exchange and car rental services are available.';
    }


    // Glimpse images based on the selected venue
    List<String> glimpseImages = [];
    if (widget.selectedVenue['name'] == 'Heritage Garden') {
      glimpseImages = venue1;
    } else if (widget.selectedVenue['name'] == 'The Everest Hotel') {
      glimpseImages = venue2;
    } else if (widget.selectedVenue['name'] == 'The Annapurna Hotel') {
      glimpseImages = venue3;
    } else if (widget.selectedVenue['name'] == 'Grand Hotel') {
      glimpseImages = venue4;
    }

    return Scaffold(
      appBar: AppBar(
        title: Text('Venue Detail'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Card(
          elevation: 8.0,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(15.0),
          ),
          child: SingleChildScrollView(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                // Image for the selected venue
                Container(
                  height: 200,
                  width: double.infinity,
                  child: ClipRRect(
                    borderRadius: BorderRadius.vertical(top: Radius.circular(15.0)),
                    child: Image.asset(
                      widget.selectedVenue['imagePath'] ?? 'assets/images/default.jpg',
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                SizedBox(height: 16),
                Padding(
                  padding: const EdgeInsets.all(16.0),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        widget.selectedVenue['name'] ?? '',
                        style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
                      ),
                      SizedBox(height: 8),
                      Text(
                        'Description: $venueDescription',
                        style: TextStyle(fontSize: 18),
                      ),
                      SizedBox(height: 16),

                      // Glimpse of the Venue
                      Text(
                        'Glimpse of the Venue',
                        style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
                      ),
                      // Carousel Slider for Glimpses
                      CarouselSlider(
                        options: CarouselOptions(
                          height: 200.0,
                          viewportFraction: 1.0,
                          enlargeCenterPage: false,
                          autoPlay: true,
                        ),
                        items: glimpseImages.map((imagePath) {
                          return Builder(
                            builder: (BuildContext context) {
                              return Container(
                                width: MediaQuery.of(context).size.width,
                                margin: EdgeInsets.symmetric(horizontal: 5.0),
                                child: ClipRRect(
                                  borderRadius: BorderRadius.circular(15.0),
                                  child: Image.asset(
                                    imagePath,
                                    fit: BoxFit.cover,
                                  ),
                                ),
                              );
                            },
                          );
                        }).toList(),
                      ),
                      SizedBox(height: 20),

                      // Contact Information
                      Text(
                        'Contact Information',
                        style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
                      ),
                      Row(
                        children: [
                          Icon(Icons.location_on, color: Colors.blueAccent, size: 30),
                          SizedBox(height: 50, width: 10),
                          Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text('Location:', style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
                              Text(contactInfo[widget.selectedVenue['name']]!['location'] ?? '', style: TextStyle(fontSize: 12)),
                            ],
                          ),
                        ],
                      ),
                      SizedBox(height: 8),
                      Row(
                        children: [
                          Icon(Icons.phone, color: Colors.blueAccent, size: 30),
                          SizedBox(width: 8),
                          Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text('Phone:', style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
                              Text(contactInfo[widget.selectedVenue['name']]!['phone'] ?? '', style: TextStyle(fontSize: 12)),
                            ],
                          ),
                        ],
                      ),
                      SizedBox(height: 8),
                      Row(
                        children: [
                          Icon(Icons.email, color: Colors.blueAccent, size: 30),
                          SizedBox(width: 8),
                          Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text('Email:', style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
                              Text(contactInfo[widget.selectedVenue['name']]!['email'] ?? '', style: TextStyle(fontSize: 12)),
                            ],
                          ),
                        ],
                      ),
                      SizedBox(height: 20),

                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(builder: (context) => BookingPage()),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.indigo,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(10.0),
                          ),
                        ),
                        child: Padding(
                          padding: const EdgeInsets.all(12.0),
                          child: Text(
                            'Book Now',
                            style: TextStyle(fontSize: 18),
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}

// onboarding screen
import 'package:flutter/material.dart';
import 'package:introduction_screen/introduction_screen.dart';
import 'home_page.dart';  // Replace with the actual home page import

class OnboardingScreen extends StatefulWidget {
  const OnboardingScreen({super.key});

  @override
  _OnboardingScreenState createState() => _OnboardingScreenState();
}

class _OnboardingScreenState extends State<OnboardingScreen> {
  final introKey = GlobalKey<IntroductionScreenState>();

  @override
  Widget build(BuildContext context) {
    return IntroductionScreen(
      key: introKey,
      pages: [
        PageViewModel(
          title: "Welcome to VenueJet",
          body: "Discover the perfect venues for your events!",
          image: _buildImage('assets/images/onboarding1.jpg'),
        ),
        PageViewModel(
          title: "Explore Featured Venues",
          body: "Find beautiful venues for weddings, conferences, and more.",
          image: _buildImage('assets/images/onboarding3.jpg'),
        ),
        PageViewModel(
          title: "Book Your Dream Venue",
          body: "Easily book your favorite venues for your special events.",
          image: _buildImage('assets/images/onboarding2.jpg'),
        ),
      ],
      onDone: () {
        // Navigate to the home page after onboarding screen
        Navigator.pushReplacement(
          context,
          MaterialPageRoute(builder: (context) => HomePage()),
        );
      },
      showSkipButton: true,
      skip: Text(
        "Skip",
        style: TextStyle(color: Colors.blueAccent),
      ),
      skipFlex: 0,
      nextFlex: 0,
      next: Icon(Icons.arrow_forward, color: Colors.blueAccent),
      done: Text(
        "Get Started",
        style: TextStyle(fontWeight: FontWeight.bold, color: Colors.blueAccent),
      ),
      doneColor: Colors.transparent,
      skipColor: Colors.black,
      nextColor: Colors.blueAccent,
      dotsDecorator: DotsDecorator(
        size: Size(10.0, 10.0),
        color: Colors.blueAccent,
        activeColor: Colors.white,
        activeSize: Size(20.0, 10.0),
        activeShape: RoundedRectangleBorder(
          borderRadius: BorderRadius.all(Radius.circular(25.0)),
        ),
      ),


    );
  }

  Widget _buildImage(String assetName) {
    return Image.asset(
      assetName,
      width: 270,
    );
  }
}

//fav page
import 'package:flutter/material.dart';

class FavoritesPage extends StatelessWidget {
  final List<String> favorites;

  FavoritesPage({required this.favorites});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Favorites'),
      ),
      body: _buildFavoritesList(),
    );
  }

  Widget _buildFavoritesList() {
    if (favorites.isEmpty) {
      return Center(
        child: Text('No favorites yet!'),
      );
    } else {
      return ListView.builder(
        itemCount: favorites.length,
        itemBuilder: (context, index) {
          return _buildFavoriteItem(favorites[index]);
        },
      );
    }
  }

  Widget _buildFavoriteItem(String favorite) {
    return Card(
      elevation: 5.0,
      margin: EdgeInsets.symmetric(horizontal: 16.0, vertical: 8.0),
      child: ListTile(
        leading: Icon(Icons.favorite, color: Colors.red),
        title: Text(favorite),
      ),
    );
  }
}

//booking page
import 'package:flutter/material.dart';

class BookingPage extends StatefulWidget {
  @override
  _BookingPageState createState() => _BookingPageState();
}

class _BookingPageState extends State<BookingPage> {
  DateTime? selectedEventOn = DateTime.now();
  DateTime? selectedEventUntil = DateTime.now();
  TimeOfDay selectedTimeFrom = TimeOfDay.now();
  TimeOfDay selectedTimeTo = TimeOfDay.now();
  int guestNumber = 1;
  String selectedEventType = 'Celebration';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Book Your Venue'),
      ),
      body: Center(
        child: Container(
          padding: EdgeInsets.all(16),
          margin: EdgeInsets.all(16),
          decoration: BoxDecoration(
            color: Colors.white,
            borderRadius: BorderRadius.circular(15),
            boxShadow: [
              BoxShadow(
                color: Colors.grey.withOpacity(0.5),
                spreadRadius: 5,
                blurRadius: 7,
                offset: Offset(0, 3),
              ),
            ],
          ),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                'Event Booking',
                style: TextStyle(
                  fontSize: 24,
                  fontWeight: FontWeight.bold,
                ),
              ),
              SizedBox(height: 20),
              buildDateTimePicker(
                label: 'Event On',
                selectedDate: selectedEventOn,
                onDateChanged: _selectEventOnDate,
              ),
              SizedBox(height: 20),
              buildDateTimePicker(
                label: 'Event Until',
                selectedDate: selectedEventUntil,
                onDateChanged: _selectEventUntilDate,
              ),
              SizedBox(height: 20),
              buildTimePicker(
                label: 'Time From',
                selectedTime: selectedTimeFrom,
                onTimeChanged: _selectTimeFrom,
              ),
              SizedBox(height: 20),
              buildTimePicker(
                label: 'Time To',
                selectedTime: selectedTimeTo,
                onTimeChanged: _selectTimeTo,
              ),
              SizedBox(height: 20),
              SizedBox(height: 20),
              buildEventTypeDropdown(),
              SizedBox(height: 20),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                children: [
                  ElevatedButton(
                    onPressed: () => _confirmBooking(),
                    child: Text('Confirm Booking'),
                  ),
                  ElevatedButton(
                    onPressed: () => _deleteBooking(),
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.redAccent,
                    ),
                    child: Text('Delete Booking'),
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget buildDateTimePicker({
    required String label,
    required DateTime? selectedDate,
    required Function() onDateChanged,
  }) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(label),
        InkWell(
          onTap: onDateChanged,
          child: Container(
            padding: EdgeInsets.all(10),
            decoration: BoxDecoration(
              border: Border.all(color: Colors.grey),
              borderRadius: BorderRadius.circular(5),
            ),
            child: Text(
              selectedDate?.toLocal().toString().split(' ')[0] ?? 'Select Date',
              style: TextStyle(fontSize: 16),
            ),
          ),
        ),
      ],
    );
  }

  Widget buildTimePicker({
    required String label,
    required TimeOfDay selectedTime,
    required Function() onTimeChanged,
  }) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(label),
        InkWell(
          onTap: onTimeChanged,
          child: Container(
            padding: EdgeInsets.all(10),
            decoration: BoxDecoration(
              border: Border.all(color: Colors.grey),
              borderRadius: BorderRadius.circular(5),
            ),
            child: Text(
              selectedTime.format(context),
              style: TextStyle(fontSize: 16),
            ),
          ),
        ),
      ],
    );
  }

  Widget buildEventTypeDropdown() {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text('Event Type'),
        DropdownButton<String>(
          value: selectedEventType,
          onChanged: (String? newValue) {
            setState(() {
              selectedEventType = newValue ?? 'Celebration';
            });
          },
          items: <String>['Celebration', 'Meeting', 'Conference','Wedding', 'Other']
              .map<DropdownMenuItem<String>>((String value) {
            return DropdownMenuItem<String>(
              value: value,
              child: Text(value),
            );
          }).toList(),
        ),
      ],
    );
  }

  Future<void> _selectEventOnDate() async {
    DateTime? picked = await showDatePicker(
      context: context,
      initialDate: selectedEventOn ?? DateTime.now(),
      firstDate: DateTime.now(),
      lastDate: DateTime(2101),
    );
    if (picked != null) {
      setState(() {
        selectedEventOn = picked;
      });
    }
  }

  Future<void> _selectEventUntilDate() async {
    DateTime? picked = await showDatePicker(
      context: context,
      initialDate: selectedEventUntil ?? selectedEventOn ?? DateTime.now(),
      firstDate: selectedEventOn ?? DateTime.now(),
      lastDate: DateTime(2101),
    );
    if (picked != null) {
      setState(() {
        selectedEventUntil = picked;
      });
    }
  }

  Future<void> _selectTimeFrom() async {
    TimeOfDay? picked = await showTimePicker(
      context: context,
      initialTime: selectedTimeFrom,
    );
    if (picked != null) {
      setState(() {
        selectedTimeFrom = picked;
      });
    }
  }

  Future<void> _selectTimeTo() async {
    TimeOfDay? picked = await showTimePicker(
      context: context,
      initialTime: selectedTimeTo,
    );
    if (picked != null) {
      setState(() {
        selectedTimeTo = picked;
      });
    }
  }

  void _confirmBooking() {
    // Replace this with your actual confirmation logic
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text('Confirm Booking'),
          content: Text('Are you sure you want to confirm this booking?'),
          actions: [
            TextButton(
              onPressed: () {
                Navigator.pop(context);
                // Add your booking logic here

              },
              child: Text('Yes'),
            ),
            TextButton(
              onPressed: () {
                Navigator.pop(context);
              },
              child: Text('No'),
            ),
          ],
        );
      },
    );
  }

  void _deleteBooking() {
    // Replace this with your actual deletion logic
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text('Delete Booking'),
          content: Text('Are you sure you want to delete this booking?'),
          actions: [
            TextButton(
              onPressed: () {
                Navigator.pop(context);
                // Add your deletion logic here

              },
              child: Text('Yes'),
            ),
            TextButton(
              onPressed: () {
                Navigator.pop(context);
              },
              child: Text('No'),
            ),
          ],
        );
      },
    );
  }
}

